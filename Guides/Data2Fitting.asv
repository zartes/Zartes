function Data2Fitting(src,evnt)
    
Xdata = src.UserData.Xdata;  
Ydata = src.UserData.Ydata;
Name = src.UserData.Name;
warning off

for i = 1:length(Xdata)
    if isnan(Xdata{i})
        p{i} = [NaN NaN];
    else
        [p{i}, s] = polyfit(Xdata{i},Ydata{i},1);
        ButtonName = questdlg(['Relate this slope value of : ' num2str(p{i}(1)*1e06) ' Ohm to:'], ...
            'Slope Measurement', ...
            'mN', 'mS', 'Cancel','Cancel');
        switch ButtonName
            case 'mN'
                handles.Circuit.mN.Value = p{i}(1)*1e06;
                handles.Circuit.mN.Units = 'Ohm
            case 'Blue'
                disp('Your favorite color is Blue.')
            case 'Green'
                disp('Your favorite color is Green.');
        end % switch
        waitfor(msgbox(['Slope value for ' Name{i} ': ' num2str(p{i}(1)*1e06) ' Ohm'],'SetupTES v1.0'));
    end
    
    try
        slope{i} = p{i}(1);
    catch
        slope{i} = NaN;
    end    
end

handles = guidata(src);
handles.IVSlope = slope;
guidata(src,handles);
% La idea es acotar los datos que hay dentro del rectangulo para hacer un
% fitting lineal y obtener la pendiente de la recta. Si es mN es la
% pendiente de la recta en estado normal, y mS la pendiente de la recta en
% estado superconductor. Con estas medidas se actualizan los valores de la
% estructura Circuit. 


% end